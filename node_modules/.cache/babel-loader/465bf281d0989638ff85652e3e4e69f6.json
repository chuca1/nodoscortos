{"ast":null,"code":"var _jsxFileName = \"/home/diego/projectos/nodos/frontend/src/components/home/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Input, message, Table, Form, Button, InputNumber } from 'antd';\nimport useForm from '../../Hook/useForm.js';\n\nfunction Home() {\n  document.title = \"Calculadora de Subredes\";\n  const agregar = [];\n  const [form, formedit] = useForm();\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  const colu = (e, og) => {\n    if (og == 0) {\n      setColumns(agregar);\n    } else {\n      let empezamos = 0;\n\n      while (og != empezamos) {\n        agregar.push({\n          title: \"Nodo \" + (empezamos + 1),\n          dataIndex: \"porfavor\",\n          key: 'ya',\n          render: (porfavor, row, index) => {\n            return /*#__PURE__*/React.createElement(\"input\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 54\n              }\n            });\n          }\n        });\n        empezamos++;\n      }\n\n      setColumns(agregar);\n    }\n  };\n\n  const numeros = e => {\n    const numeros = parseInt(form.nodos, 10);\n\n    if (numeros > 0) {\n      colu(e, form.nodos);\n    }\n  };\n\n  const crearRow = nod => {\n    let newData = [];\n    let fila = {};\n\n    for (let i = 0; i < nod; i++) {\n      for (let j = 0; j < nod; j++) {}\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"negro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Bienvenido a calcular las subredes de una Direccion IP\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \" Cual direccion quieres usar? \"), /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Cuantos nodos usaras?\",\n    name: \"nodos\",\n    onChange: e => formedit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: e => numeros(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/diego/projectos/nodos/frontend/src/components/home/Home.js"],"names":["React","useEffect","useState","Input","message","Table","Form","Button","InputNumber","useForm","Home","document","title","agregar","form","formedit","data","setData","columns","setColumns","colu","e","og","empezamos","push","dataIndex","key","render","porfavor","row","index","numeros","parseInt","nodos","crearRow","nod","newData","fila","i","j"],"mappings":"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","sourcesContent":["import React, {useEffect, useState }from 'react';\nimport { Input, message, Table, Form, Button, InputNumber } from 'antd';\nimport useForm from '../../Hook/useForm.js'\nfunction Home() {\n  document.title = \"Calculadora de Subredes\"\n  const agregar =[]\n  const [form,formedit] = useForm();\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  const colu = (e, og) =>  {\n    if(og == 0){\n\n\n      setColumns(agregar)\n    }\n    else {\n      let empezamos = 0\n      while(og != empezamos){\n        agregar.push({\n          title: \"Nodo \" + (empezamos+1),\n          dataIndex: \"porfavor\",\n          key: 'ya',\n          render: (porfavor, row, index) => { return <input /> }  \n        })\n        empezamos++;\n      }\n      setColumns(agregar)\n\n    }\n  }\n\n  const numeros = (e)=>{\n    const numeros = parseInt(form.nodos,10);\n    if(numeros > 0){\n      colu(e,form.nodos);\n    }\n  }\n\n  const crearRow = (nod) =>{\n    let newData = [];\n    let fila = {};\n    for(let i = 0; i< nod; i++){\n      for(let j = 0; j < nod; j++){\n\n      }\n    }\n  }\n\n  return (\n    <div className=\"negro\">\n      <div className=\"todo\">\n        <h1>Bienvenido a calcular las subredes de una Direccion IP</h1>\n        <h2> Cual direccion quieres usar? </h2>\n        <Form layout = 'vertical'>\n          <Input placeholder = \"Cuantos nodos usaras?\" name=\"nodos\"\n                 onChange={e => formedit(e)}/>\n          <Button type=\"primary\" onClick = {e => numeros(e)}  >Submit</Button>\n        </Form>\n        <Table columns={columns} dataSource={data} />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}